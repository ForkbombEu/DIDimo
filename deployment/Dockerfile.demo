FROM golang:1.23-alpine AS builder
WORKDIR /src

COPY go.mod go.sum .
RUN go mod download
COPY . ./
ENV GOCACHE=/go-cache
ENV GOMODCACHE=/gomod-cache
RUN --mount=type=cache,target=/gomod-cache --mount=type=cache,target=/go-cache \
    go build -o didimo cmd/didimo/didimo.go

FROM debian:12-slim
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    rm -f /etc/apt/apt.conf.d/docker-clean \
    && apt-get update \
    && apt-get -y --no-install-recommends install \
        build-essential make bash curl git tmux wget ca-certificates

WORKDIR /app
COPY .. ./

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ENV MISE_DATA_DIR="/mise"
ENV MISE_CONFIG_DIR="/mise"
ENV MISE_CACHE_DIR="/mise/cache"
ENV MISE_INSTALL_PATH="/usr/local/bin/mise"
ENV PATH="/mise/shims:$PATH"

RUN curl https://mise.run | sh
RUN mise trust
RUN mise i

# install overmind
RUN curl -sLO https://github.com/DarthSim/overmind/releases/download/v2.5.1/overmind-v2.5.1-linux-amd64.gz
RUN gunzip overmind-v2.5.1-linux-amd64.gz
RUN mv overmind-v2.5.1-linux-amd64 /usr/local/bin/overmind
RUN chmod +x /usr/local/bin/overmind

# install didimo
COPY --from=builder /src/didimo /usr/local/bin/didimo
RUN chmod +x /usr/local/bin/didimo
RUN didimo migrate

ARG TEMPORAL_ADDRESS
ENV TEMPORAL_ADDRESS $TEMPORAL_ADDRESS
ENV PUBLIC_POCKETBASE_URL https://demo.didimo.apps.forkbomb.eu
WORKDIR webapp
RUN bun i
RUN bun run build

CMD ["overmind", "s", "-f", "/app/Procfile.demo" ]
