{
  "version": 3,
  "sources": ["../../src/hosting-database.node.test.js"],
  "sourcesContent": ["\"use strict\";\n\nimport path from \"path\";\n\nimport debugFactory from \"debug\";\nconst log = debugFactory(\"tgwf:url2green:test\");\n\nimport { hosting } from \"@tgwf/url2green\";\n\nconst dbPath = path.resolve(\n  __dirname,\n  \"..\",\n  \"data\",\n  \"fixtures\",\n  \"url2green.test.db\"\n);\n\ndescribe(\"hostingDatabase\", () => {\n  describe(\"checking a single domain with #check\", () => {\n    test(\"tries to use a local database if available\", async () => {\n      const res = await hosting.check(\"google.com\", dbPath);\n      expect(res).toEqual(true);\n    });\n  });\n  describe(\"implicitly checking multiple domains with #check\", () => {\n    test(\"tries to use a local database if available\", async () => {\n      const res = await hosting.check(\n        [\"google.com\", \"kochindustries.com\"],\n        dbPath\n      );\n      expect(res).toContain(\"google.com\");\n    });\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAEA,kBAAiB;AAEjB,mBAAyB;AAGzB,uBAAwB;AAFxB,MAAM,MAAM,0BAAa,qBAAqB;AAI9C,MAAM,SAAS,oBAAK,QAClB,WACA,MACA,QACA,YACA,mBACF;AAEA,SAAS,mBAAmB,MAAM;AAChC,WAAS,wCAAwC,MAAM;AACrD,SAAK,8CAA8C,YAAY;AAC7D,YAAM,MAAM,MAAM,yBAAQ,MAAM,cAAc,MAAM;AACpD,aAAO,GAAG,EAAE,QAAQ,IAAI;AAAA,IAC1B,CAAC;AAAA,EACH,CAAC;AACD,WAAS,oDAAoD,MAAM;AACjE,SAAK,8CAA8C,YAAY;AAC7D,YAAM,MAAM,MAAM,yBAAQ,MACxB,CAAC,cAAc,oBAAoB,GACnC,MACF;AACA,aAAO,GAAG,EAAE,UAAU,YAAY;AAAA,IACpC,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
