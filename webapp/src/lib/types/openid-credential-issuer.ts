/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface OpenidCredentialIssuerSchema {
  /**
   * The Credential Issuer's identifier
   */
  credential_issuer: string;
  /**
   * Array of OAuth 2.0 Authorization Server identifiers.
   */
  authorization_servers?: string[];
  /**
   * URL of the Credential Issuer's Credential Endpoint.
   */
  credential_endpoint: string;
  /**
   * URL of the Credential Issuer's Nonce Endpoint.
   */
  nonce_endpoint?: string;
  /**
   * URL of the Credential Issuer's Deferred Credential Endpoint.
   */
  deferred_credential_endpoint?: string;
  /**
   * URL of the Credential Issuer's Notification Endpoint.
   */
  notification_endpoint?: string;
  credential_response_encryption?: {
    alg_values_supported: ("ES256" | "EdDSA" | "RS256")[];
    enc_values_supported: ("A128CBC-HS256" | "A128GCM")[];
    encryption_required: boolean;
    [k: string]: unknown;
  };
  batch_credential_issuance?: {
    batch_size: number;
    [k: string]: unknown;
  };
  /**
   * JWT containing Credential Issuer metadata parameters as claims.
   */
  signed_metadata?: string;
  display?: {
    name?: string;
    locale?: string;
    logo?: {
      uri: string;
      alt_text?: string;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  }[];
  credential_configurations_supported: {
    [k: string]: {
      format: string;
      scope?: string;
      cryptographic_binding_methods_supported?: (
        | "JWK"
        | "jwk"
        | "did"
        | "did:web"
        | "did:ebsi"
        | "did:jwk"
        | "did:dyne"
        | "did:dyne:sandbox.signroom"
        | "did:key"
        | "cose_key"
      )[];
      credential_signing_alg_values_supported?: (
        | "ES256"
        | "EdDSA"
        | "Ed25519Signature2020"
        | "RS256"
        | "ES256K"
        | "RSA"
        | "RsaSignature2018"
      )[];
      proof_types_supported?: {
        [k: string]: {
          proof_signing_alg_values_supported: ("ES256" | "EdDSA" | "PS256" | "RS256")[];
          key_attestations_required?: {
            key_storage?: string[];
            user_authentication?: string[];
            [k: string]: unknown;
          };
          [k: string]: unknown;
        };
      };
      display?: {
        name: string;
        locale?: string;
        logo?: {
          [k: string]: unknown;
        };
        [k: string]: unknown;
      }[];
      credential_definition?: {
        type?: string[];
        credentialSubject?: {
          [k: string]: {
            mandatory?: boolean;
            display?: {
              name: string;
              locale?: string;
              [k: string]: unknown;
            }[];
            [k: string]: unknown;
          };
        };
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
  };
  [k: string]: unknown;
}
